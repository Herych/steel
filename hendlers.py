from typing import Union

from aiogram import types
from aiogram.dispatcher.filters import CommandStart, Command
from aiogram.types import CallbackQuery, Message

from db_commands import add_user, get_item, select_user
from kayboards.menu_keyboards import menu_cd, categories_keyboard, subcategories_keyboard, items_keyboard, item_keyboard
from load_all import dp, bot

from kayboards import start_menu


@dp.message_handler(CommandStart())
async def register_user(message: types.Message):
    user = await select_user(message.from_user.id)
    if not user:
        await add_user(user_id=message.from_user.id,
                       full_name=message.from_user.full_name,
                       username=message.from_user.username)

    await message.answer(
        f'–ü—Ä–∏–≤—ñ—Ç {message.from_user.first_name}, '
        f'—ñ–Ω–∂–µ–Ω–µ—Ä–∞–º–∏ –∫–æ–º–ø–∞–Ω—ñ—ó STEEL –±—É–ª–∏ —Å–∫–æ–Ω—Å—Ç—Ä—É–π–æ–≤–∞–Ω—ñ –¥—É–ª—å–Ω—ñ –ø—Ä–∏—Å—Ç—Ä–æ—ó –∑ —É–Ω—ñ–∫–∞–ª—å–Ω–∏–º–∏'
        ' —ñ –µ–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω–∏–º–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º–∏, –≤–æ–Ω–∏ –ø–æ–≤–Ω—ñ—Å—Ç—é –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—é—Ç—å –Ω–∞–π–≤–∏—â–∏–º –≤–∏–º–æ–≥–∞–º –ø–æ –≥–∞—Å—ñ–Ω–Ω—é'
        ' –∑–≤—É–∫—É, –ø–æ—Å—Ç—Ä—ñ–ª—É. –ü–æ–≤–Ω—ñ—Å—Ç—é –ø—Ä–∏–±–∏—Ä–∞—é—Ç—å —Å–ø–∞–ª–∞—Ö, –ø—ñ–¥—Ç—Ä–∏–º—É—é—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏–π —Ä–µ–∂–∏–º —Å—Ç—Ä—ñ–ª—å–±–∏.',
        reply_markup=start_menu)


@dp.message_handler(text='–í—ñ–¥–µ–æ—ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó üé¶')
async def show_menu(message: types.Message):
    await list_categories(message)


async def list_categories(message: Union[CallbackQuery, Message], **kwargs):
    markup = await categories_keyboard()

    if isinstance(message, Message):
        await message.answer("–Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó —Ç–∞ –≤—ñ–¥–µ–æ–º–∞—Ç–µ—Ä—ñ–∞–ª–∏: ", reply_markup=markup)

    elif isinstance(message, CallbackQuery):
        call = message
        await call.message.edit_reply_markup(markup)


async def list_subcategories(callback: CallbackQuery, category, **kwargs):
    markup = await subcategories_keyboard(category)

    # –ò–∑–º–µ–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –∫–Ω–æ–ø–∫–∏ —Å –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏
    await callback.message.edit_reply_markup(markup)


async def list_items(callback: CallbackQuery, category, subcategory, **kwargs):
    markup = await items_keyboard(category, subcategory)

    # –ò–∑–º–µ–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –∫–Ω–æ–ø–∫–∏ —Å –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏
    await callback.message.edit_text(text="–Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó —Ç–∞ –≤—ñ–¥–µ–æ–º–∞—Ç–µ—Ä—ñ–∞–ª–∏: ", reply_markup=markup)


async def show_item(callback: CallbackQuery, category, subcategory, item_id):
    # markup = item_keyboard(category, subcategory)

    # –ë–µ—Ä–µ–º –∑–∞–ø–∏—Å—å –æ –Ω–∞—à–µ–º —Ç–æ–≤–∞—Ä–µ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    item = await get_item(item_id)
    # text = f"{item.name}"
    await callback.message.answer_video(video=item.video, caption=item.description)
    # await callback.message.edit_text(text='[eqyz', reply_markup=markup)


@dp.callback_query_handler(menu_cd.filter())
async def navigate(call: CallbackQuery, callback_data: dict):
    """
    :param call: –¢–∏–ø –æ–±—ä–µ–∫—Ç–∞ CallbackQuery, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–ª–µ—Ç–∞–µ—Ç –≤ —Ö–µ–Ω–¥–ª–µ—Ä
    :param callback_data: –°–ª–æ–≤–∞—Ä—å —Å –¥–∞–Ω–Ω—ã–º–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ö—Ä–∞–Ω—è—Ç—Å—è –≤ –Ω–∞–∂–∞—Ç–æ–π –∫–Ω–æ–ø–∫–µ
    """

    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å –º–µ–Ω—é, –∫–æ—Ç–æ—Ä—ã–π –∑–∞–ø—Ä–æ—Å–∏–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    current_level = callback_data.get("level")

    # –ü–æ–ª—É—á–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é, –∫–æ—Ç–æ—Ä—É—é –≤—ã–±—Ä–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å (–ü–µ—Ä–µ–¥–∞–µ—Ç—Å—è –≤—Å–µ–≥–¥–∞)
    category = callback_data.get("category")

    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é, –∫–æ—Ç–æ—Ä—É—é –≤—ã–±—Ä–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å (–ü–µ—Ä–µ–¥–∞–µ—Ç—Å—è –ù–ï –í–°–ï–ì–î–ê - –º–æ–∂–µ—Ç –±—ã—Ç—å 0)
    subcategory = callback_data.get("subcategory")

    # –ü–æ–ª—É—á–∞–µ–º –∞–π–¥–∏ —Ç–æ–≤–∞—Ä–∞, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–±—Ä–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å (–ü–µ—Ä–µ–¥–∞–µ—Ç—Å—è –ù–ï –í–°–ï–ì–î–ê - –º–æ–∂–µ—Ç –±—ã—Ç—å 0)
    item_id = int(callback_data.get("item_id"))

    # –ü—Ä–æ–ø–∏—Å—ã–≤–∞–µ–º "—É—Ä–æ–≤–Ω–∏" –≤ –∫–æ—Ç–æ—Ä—ã—Ö –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –Ω–æ–≤—ã–µ –∫–Ω–æ–ø–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    levels = {
        "0": list_categories,  # –û—Ç–¥–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        "1": list_subcategories,  # –û—Ç–¥–∞–µ–º –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        "2": list_items,  # –û—Ç–¥–∞–µ–º —Ç–æ–≤–∞—Ä—ã
        "3": show_item,

    }

    # –ó–∞–±–∏—Ä–∞–µ–º –Ω—É–∂–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —É—Ä–æ–≤–Ω—è
    current_level_function = levels[current_level]

    # –í—ã–ø–æ–ª–Ω—è–µ–º –Ω—É–∂–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –∏ –ø–µ—Ä–µ–¥–∞–µ–º —Ç—É–¥–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –∏–∑ –∫–Ω–æ–ø–∫–∏
    await current_level_function(
        call,
        category=category,
        subcategory=subcategory,
        item_id=item_id
    )
    await bot.answer_callback_query(callback_query_id=call.id)


@dp.message_handler(text='–ö–∞—Ç–∞–ª–æ–≥ –ø—Ä–æ–¥—É–∫—Ü—ñ—ó')
async def catalog(message: types.Message):
    await message.answer(f"–ó –∫–∞—Ç–∞–ª–æ–≥–æ–º –ø—Ä–æ–¥—É–∫—Ü—ñ—ó –∫–æ–º–ø–∞–Ω—ñ—ó STEEL –º–æ–∂–Ω–∞ –æ–∑–Ω–∞–π–æ–º–∏—Ç–∏—Å—è –ø–µ—Ä–µ–π—à–æ–≤—à–∏ –∑–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º: \n"
                         f"https://silent-steel.in.ua/collections/all")


#
# @dp.message_handler(text='–í—ñ–¥–µ–æ—ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó üé¶')
# async def video_instruction(message: types.Message):
#     await message.answer('–í—ñ–¥–µ–æ—ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ:', reply_markup=choice_video_instruction)
#
#
# @dp.message_handler(text='–ù–∞–∑–∞–¥ üîô')
# async def return_to(message: types.Message):
#     await message.delete()
#     await message.answer(f"–î–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –±–æ—Ç–æ–º, —Å–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ—Å—è –º–µ–Ω—é:", reply_markup=start_menu)
#
#
@dp.message_handler(content_types=types.ContentType.VIDEO)
async def echo(message: types.Message):
    await message.answer(message.video.file_id)
